@mixin artisans($theme) {
    $primary: map-get($theme, primary);
    $accent: map-get($theme, accent);
    $warn: map-get($theme, warn);
    $bg: map-get($theme, background);
    $fg: map-get($theme, foreground);


    .text-primary {
        color: mat-color($primary);
    }

    .text-accent {
        color: mat-color($accent);
    }

    .text-warn {
        color: mat-color($warn);
    }

    .text-light {
        color: mat-color($fg, base, 0.5);
    }

    .text-bold {
        font-weight: bold !important;
    }


    .frame-primary {
        background: mat-color($primary);

        &, a:not([ng-reflect-router-link]):not([mat-flat-button]):not([mat-button]):not([mat-raised-button]) {
            color: mat-color($primary, default-contrast);
        }
    }

    .frame-accent {
        background: mat-color($accent);

        &, a:not([ng-reflect-router-link]):not([mat-flat-button]):not([mat-button]):not([mat-raised-button]) {
            border: 1px solid red !important;
            color: mat-color($accent, default-contrast);
        }

    }

    .frame-warn {
        background: mat-color($warn);

        &, a:not([ng-reflect-router-link]):not([mat-flat-button]):not([mat-button]):not([mat-raised-button]) {
            color: mat-color($warn, default-contrast);
        }
    }

    .frame-green {
        background: #00AE8C;

        &, a:not([ng-reflect-router-link]):not([mat-flat-button]):not([mat-button]):not([mat-raised-button]) {
            color: #FFFFFF;
        }
    }

    .frame-padding {
        padding: 30px;
    }

    a {
        color: mat-color($primary);
    }

}


