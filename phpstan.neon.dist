parameters:
    level: 5
    paths:
        - server/
        - tests/
    doctrine:
        repositoryClass: Application\Repository\AbstractRepository
    inferPrivatePropertyTypeFromConstructor: true
    earlyTerminatingMethodCalls:
        Application\Service\Importer:
            - throw

    ignoreErrors:
        - '~^Call to an undefined method Application\\Repository\\.*Repository::find(One)?By.*\(\)\.$~'
        - '~^Call to an undefined method Application\\Repository\\AbstractRepository\<Application\\Model\\User\>::(getOneByEmail|getOneById)\(\)\.$~'
        - '~^Property .* does not accept Application\\Repository\\AbstractRepository\<Application\\Model\\.*\>\.$~'
        - '~^Parameter \#1 \$wrappedType of static method GraphQL\\Type\\Definition\\Type\:\:nonNull\(\) expects GraphQL\\Type\\Definition\\NullableType, GraphQL\\Type\\Definition\\.* given\.$~'
        - '~^Access to an undefined property Laminas\\View\\Renderer\\RendererInterface\:\:\$serverUrl\.$~'
        - '~^Call to an undefined method Laminas\\View\\Renderer\\RendererInterface\:\:.*\(\)\.$~'
        -
            message: '~^If condition is always true\.$~'
            path: server/Application/Model/OrderLine.php

includes:
    - vendor/phpstan/phpstan-doctrine/extension.neon
    - vendor/phpstan/phpstan-doctrine/rules.neon
